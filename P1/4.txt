4.
a. Write a predicate to determine the difference of two sets.
b. Write a predicate to add value 1 after every even element from a list.

difference(l1...ln, k1...km) =
	= [], if n = 0
	= l1 U difference(l2 ... ln, k1 ... km), if contains(k1.. km, l1) = false
	= difference(l2 ... ln, k1 ... km), otherwise

contains(l1 ... ln, e)=
	= false, if n=0
	= true, if l1 == e
	= contains(l2 ... ln, e), otherwise


%contains(L-list, E-integer)
%flow(i,i), (i,o)
% the output is true or false, so we don't need an extra output variable and we 
% will only write the true cases.

contains([E|_], E):-!.
contains([_|T], E):-
    contains(T, E).


%difference(A-list, B-list, R-result)
%flow(i,i,i), (i,i,o)

difference([], _, []):-!.
difference([H|T], B, [H|R]):-
    not(contains(B, H)),
    !,
    difference(T, B, R).
difference([_|T], B, R):-
    difference(T, B, R).


----- b -----

add1AfterEven(l1l2...ln)
	= [], if n = 0
	= l1 U add1AfterEven(l2...ln), if l1 %2 == 1
	= l1 U 1 U add1AfterEven(l2 ... ln), otherwise


%add1AfterEven(L-list, R-result)
add1AfterEven([], []).
add1AfterEven([H|T], [H|R]):-
    H mod 2 =:= 1,
    !,
    add1AfterEven(T, R).
add1AfterEven([H|T], [H,100|R]):-
    add1AfterEven(T, R).